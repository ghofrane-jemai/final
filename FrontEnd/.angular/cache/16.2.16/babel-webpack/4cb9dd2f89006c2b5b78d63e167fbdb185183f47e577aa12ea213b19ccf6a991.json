{"ast":null,"code":"import _asyncToGenerator from \"D:/3emeISAMM/PFE/Code/user-form/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nvar UserFields;\n(function (UserFields) {\n  UserFields[\"FirstName\"] = \"firstName\";\n  UserFields[\"LastName\"] = \"lastName\";\n  UserFields[\"Country\"] = \"country\";\n  UserFields[\"City\"] = \"city\";\n  UserFields[\"Dob\"] = \"dob\";\n  UserFields[\"Gender\"] = \"gender\";\n  UserFields[\"IdCardFront\"] = \"idCardFront\";\n  UserFields[\"IdCardBack\"] = \"idCardBack\";\n  UserFields[\"Selfie\"] = \"selfie\";\n})(UserFields || (UserFields = {}));\nexport let HomeComponent = class HomeComponent {\n  constructor(http, alertService) {\n    this.http = http;\n    this.alertService = alertService;\n    this.UserFields = UserFields; // Exposer l'énumération\n    this.lastNameInput = null; // Référence pour le champ lastName\n    this.videoElement = null;\n    this.canvasElement = null;\n    this.user = {\n      firstName: '',\n      lastName: '',\n      country: '',\n      city: '',\n      dob: '',\n      dobArabic: '',\n      gender: '',\n      idCardFront: '',\n      idCardBack: '',\n      extractedDataFront: {},\n      extractedDataBack: {},\n      selfie: ''\n    };\n    this.ageError = '';\n    this.dateError = '';\n    this.countries = [\"Tunisie\"];\n    this.citiesByCountry = {\n      \"Tunisie\": [\"Nabeul\", \"Qurbus\", \"Kélibia\", \"Yasmine Hammamet\", \"Kerkouane\", \"Al Huwariyah\", \"Kairouan\", \"Douz\", \"Nefta\", \"Ksar Ghilane\", \"Gafsa\", \"Degueche\", \"Shabikah\", \"Tozeur\", \"Bizerte\", \"Takrouna\", \"Djebba\", \"Midoun\", \"Djerba Ajim\", \"Ghizen\", \"Arkou\", \"Houmt Souk\", \"Aghir\", \"Hara Sghira Er Riadh\", \"Mellita\", \"Souk Houmet\", \"Mezraia\", \"Djerba Midun\", \"Ksar Hadada\", \"Tataouine Nord\", \"Tataouine Ville\", \"Ghomrassen\", \"Testour\", \"Kesra\", \"Beja, Tunisie\", \"Le Kef\", \"Makthar\", \"Sabria\", \"Toujane\", \"Zaghouan\", \"Zriba\", \"Matmata\", \"Gabès Médina\", \"Tamezret\", \"La Marsa\", \"La Goulette\", \"Tunis\", \"Carthage\", \"Sidi Bou Saïd\", \"Sbeïtla\", \"Monastir\", \"Sahline\", \"Ariana, Tunisie\", \"CHENINI\", \"Douiret\", \"Bani Khedeche\", \"Ksar Ouled Brahim\", \"Sangho\", \"Médine\", \"Mahboubine\", \"Khalfallah\", \"Ksar Hallouf\", \"Zarzis\", \"Guellala\", \"Hammam Sousse\", \"Hammamet\", \"Sousse\", \"M'saken\", \"El Jem\", \"Hiboun\", \"Mahdia\"]\n    };\n    this.cities = [];\n    this.selectedVersoImage = null;\n    this.selectedVersoImageHash = null;\n    this.isSubmitting = false;\n    this.previousFirstname = '';\n    this.previousLastname = '';\n  }\n  ngOnInit() {\n    const video = document.getElementById('videoElement');\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      video.srcObject = stream;\n    }).catch(error => {\n      console.error(\"Erreur lors de l'accès à la caméra : \", error);\n    });\n  }\n  onFileChangeRecto(event, field) {\n    const input = event.target;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      // Appeler le serveur pour traiter l'image\n      const formData = new FormData();\n      formData.append('image', file);\n      this.http.post('http://localhost:5001/ocr/recto', formData).subscribe(response => {\n        console.log('Résultat OCR Recto:', response);\n        if (response.error) {\n          // Informer l'utilisateur de la non-conformité de l'image\n          alert('Erreur : ' + response.message);\n          // Ne pas poursuivre le traitement si l’image n’est pas conforme\n          return;\n        }\n        this.getBase64Image(file).then(base64 => {\n          this.user.idCardFront = base64;\n        });\n        this.user.extractedDataFront = response.donnees; // Stocker les résultats extractés\n        // Envoyer les données à comparaison_N_P.py\n        const ocrData = {\n          'ocr_result': this.user.extractedDataFront\n        };\n        this.http.post('http://localhost:5003/ocr-extraction', ocrData).subscribe(response => {\n          console.log(`Résultats d'extraction OCR envoyés au serveur Python :`, response);\n        }, error => {\n          console.error('Erreur lors de l\\'envoi des données à comparaison_N_P.py (OCR Recto):', error);\n        });\n        if (this.selectedVersoImage) {\n          this.processVersoImage(this.selectedVersoImage);\n        }\n      }, error => {\n        console.error('Erreur lors du traitement OCR Recto (réseau ou serveur) :', error);\n      });\n    }\n  }\n  processVersoImage(image) {\n    // Nettoyer les données précédentes du Verso\n    this.user.idCardBack = null;\n    this.user.extractedDataBack = {};\n    const formData = new FormData();\n    formData.append('image', image);\n    this.http.post('http://localhost:5002/ocr/verso', formData).subscribe(response => {\n      console.log('Résultat OCR Verso:', response);\n      this.getBase64Image(image).then(base64 => {\n        this.user.idCardBack = base64;\n      });\n      this.user.extractedDataBack = response.donnees; // Stocker les résultats extractés\n    }, error => {\n      console.error('Erreur lors du traitement OCR Verso:', error);\n      // Gérer les erreurs et afficher une alerte utilisateur-friendly\n      if (error.status === 400) {\n        // Bad Request\n        this.alertService.error('Erreur de traitement OCR', 'Veuillez vérifier que l\\'image du verso est correcte.');\n      } else if (error.status === 500) {\n        // Internal Server Error\n        this.alertService.error('Erreur serveur', 'Erreur interne du serveur. Veuillez réessayer plus tard.');\n      } else {\n        this.alertService.error('Erreur inconnue', 'Une erreur inconnue est survenue. Veuillez contacter le support.');\n      }\n    });\n  }\n  onFileChangeVerso(event, field) {\n    const input = event.target;\n    if (input.files && input.files.length > 0) {\n      this.selectedVersoImage = input.files[0]; // Stocker l'image Verso\n      this.selectedVersoImageHash = this.selectedVersoImage.name + this.selectedVersoImage.lastModified;\n      const file = input.files[0];\n      // Appeler le serveur pour traiter l'image\n      const formData = new FormData();\n      formData.append('image', file);\n      this.http.post('http://localhost:5002/ocr/verso', formData).subscribe(response => {\n        console.log('Résultat OCR Verso:', response);\n        this.getBase64Image(file).then(base64 => {\n          this.user.idCardBack = base64;\n        });\n        this.user.extractedDataBack = response.donnees; // Stocker les résultats extractés\n      }, error => {\n        console.error('Erreur lors du traitement OCR Verso:', error);\n      });\n    }\n  }\n  // Nouvelle méthode pour convertir l'image en base64\n  getBase64Image(file) {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    return new Promise(resolve => {\n      reader.onload = () => resolve(reader.result);\n    });\n  }\n  validateForm() {\n    return this.user.firstName !== '' && this.user.lastName !== '' && this.user.country !== '' && this.user.city !== '' && this.user.dob !== '' && this.user.gender !== '' && this.user.idCardFront !== null && this.user.idCardBack !== null && this.user.selfie !== null;\n  }\n  takeSelfie(event) {\n    // Prévenir la soumission du formulaire\n    event.preventDefault();\n    // Sélectionner l'élément vidéo et canvas\n    const video = document.getElementById('videoElement');\n    const canvas = document.querySelector('canvas#canvasElement');\n    const selfiePreview = document.getElementById('selfiePreview');\n    // Vérifier que l'élément vidéo est bien présent\n    if (!video) {\n      console.error('Erreur : L\\'élément vidéo est introuvable.');\n      return;\n    }\n    // Créer un contexte pour le canvas\n    const context = canvas.getContext('2d');\n    if (!context) {\n      console.error('Erreur : Impossible d\\'obtenir le contexte du canvas.');\n      return;\n    }\n    // Dessiner l'image du flux vidéo dans le canvas\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    // Convertir le canvas en une image base64\n    this.user.selfie = canvas.toDataURL('image/jpeg'); // Convertir en chaîne base64\n    // Afficher l'aperçu de la selfie\n    if (selfiePreview) {\n      selfiePreview.src = this.user.selfie;\n      selfiePreview.style.display = 'block'; // Afficher l'aperçu\n    } else {\n      console.error('Erreur : L\\'élément d\\'aperçu selfie est introuvable.');\n    }\n    // Arrêter le flux vidéo après la capture de la selfie\n    const stream = video.srcObject;\n    const tracks = stream?.getTracks();\n    if (tracks) {\n      tracks.forEach(track => track.stop()); // Arrêter tous les tracks (caméra)\n    }\n    // Masquer la vidéo\n    video.style.display = 'none';\n  }\n  restartCamera() {\n    if (this.videoElement?.nativeElement) {\n      const stream = this.videoElement.nativeElement.srcObject;\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    }\n    setTimeout(() => {\n      this.startCamera();\n    }, 500);\n  }\n  onCountryChange() {\n    const selectedCountry = this.user.country;\n    this.cities = this.citiesByCountry[selectedCountry] || [];\n    this.user.city = '';\n  }\n  convertDateToArabic(dateStr) {\n    return new Promise((resolve, reject) => {\n      if (!dateStr) {\n        resolve('');\n        return;\n      }\n      const parts = dateStr.split('/');\n      if (parts.length !== 3) {\n        resolve(dateStr); // Retourne la date originale si le format est incorrect\n        return;\n      }\n      const day = parts[0];\n      const month = parts[1];\n      const year = parts[2];\n      const monthNames = ['جانفي', 'فيفري', 'مارس', 'أفريل', 'ماي', 'جوان', 'جويلية', 'أوت', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];\n      const monthIndex = parseInt(month, 10) - 1;\n      if (monthIndex < 0 || monthIndex >= 12) {\n        resolve(dateStr); // Retourne la date originale si le mois est invalide\n        return;\n      }\n      const arabicDate = `${day} ${monthNames[monthIndex]} ${year}`;\n      resolve(arabicDate);\n    });\n  }\n  onDateChange() {\n    const birthdate = new Date(this.user.dob);\n    const today = new Date();\n    if (birthdate.getFullYear() > today.getFullYear()) {\n      this.dateError = \"Choix incorrect : l'année choisie ne peut pas être supérieure à l'année actuelle.\";\n      this.ageError = \"\";\n      return;\n    } else {\n      this.dateError = \"\";\n    }\n    const age = today.getFullYear() - birthdate.getFullYear();\n    const monthDiff = today.getMonth() - birthdate.getMonth();\n    if (age < 18 || age === 18 && monthDiff < 0) {\n      this.ageError = \"Vous devez avoir au moins 18 ans.\";\n    } else {\n      this.ageError = \"\";\n    }\n    // Convertir la date en format arabe et l'envoyer au serveur\n    const formattedDate = this.formatDate(this.user.dob);\n    this.convertDateToArabic(formattedDate).then(arabicDate => {\n      this.user.dobArabic = arabicDate;\n      console.log('Date transformée en arabe:', this.user.dobArabic);\n      // Envoyer la date au serveur\n      this.sendTransliteratedDate(arabicDate);\n    }).catch(error => {\n      console.error('Erreur lors de la conversion de la date:', error);\n    });\n  }\n  sendTransliteratedDate(arabicDate) {\n    const apiUrl = 'http://localhost:5003/transliterate-names';\n    const data = {\n      'تاريخ الولادة': arabicDate // Utilisez la clé que votre serveur attend\n    };\n\n    this.http.post(apiUrl, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).subscribe(response => {\n      console.log('Date en arabe envoyée avec succès:', response);\n    }, error => {\n      console.error('Erreur lors de l\\'envoi de la date:', error);\n    });\n  }\n  startCamera() {\n    const video = document.getElementById('videoElement');\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        video.srcObject = stream;\n        video.style.display = \"block\"; // Rendre la vidéo visible\n      }).catch(error => {\n        console.error(\"Erreur d'accès à la caméra :\", error);\n      });\n    }\n  }\n  stopCamera() {\n    const video = document.getElementById('videoElement');\n    const stream = video.srcObject;\n    if (stream) {\n      const tracks = stream.getTracks();\n      tracks.forEach(track => track.stop()); // Arrêter la caméra\n      video.srcObject = null;\n      video.style.display = \"none\"; // Cacher la vidéo\n    }\n  }\n\n  checkFocusOutFirstName(event) {\n    const firstname = event.target.value.trim();\n    if (firstname !== '' && firstname !== this.previousFirstname) {\n      this.sendTransliteratedName('firstName', firstname);\n      this.previousFirstname = firstname;\n    }\n  }\n  checkFocusOutLastName(event) {\n    const lastname = event.target.value.trim();\n    if (lastname !== '' && lastname !== this.previousLastname) {\n      this.sendTransliteratedName('lastName', lastname);\n      this.previousLastname = lastname;\n    }\n  }\n  sendTransliteratedName(field, value) {\n    const apiUrl = 'http://localhost:5000/transliterate';\n    const data = {\n      [field === 'firstName' ? 'firstName' : 'lastName']: value\n    };\n    this.http.post(apiUrl, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).subscribe(response => {\n      const transliteratedName = field === 'firstName' ? response['الاسم'] : response['اللقب'];\n      console.log(`${field} translittéré : ${transliteratedName}`);\n      // Envoyer le résultat au serveur Python\n      const sendData = {\n        [field === 'firstName' ? 'الاسم' : 'اللقب']: transliteratedName\n      };\n      this.http.post('http://localhost:5003/transliterate-names', sendData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).subscribe(sendResponse => {\n        console.log(`${field} envoyé au serveur Python avec succès`);\n      }, sendError => {\n        console.error(`Erreur lors de l'envoi de ${field} au serveur Python :`, sendError);\n      });\n    }, error => {\n      console.error(`Erreur lors de la translittération de ${field} :`, error);\n    });\n  }\n  transliterateFirstName() {\n    if (this.user.firstName.trim() !== '') {\n      const apiUrl = 'http://localhost:5000/transliterate';\n      const data = {\n        firstName: this.user.firstName\n      };\n      this.http.post(apiUrl, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).subscribe(response => {\n        console.log(`Prénom translittéré : ${response['الاسم']}`);\n        // Traitement supplémentaire si nécessaire\n      }, error => {\n        console.error('Erreur lors de la translittération du prénom :', error);\n      });\n    }\n  }\n  transliterateLastName() {\n    if (this.user.lastName.trim() !== '') {\n      const apiUrl = 'http://localhost:5000/transliterate';\n      const data = {\n        lastName: this.user.lastName\n      };\n      this.http.post(apiUrl, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).subscribe(response => {\n        console.log(`Nom translittéré : ${response['اللقب']}`);\n        // Traitement supplémentaire si nécessaire\n      }, error => {\n        console.error('Erreur lors de la translittération du nom :', error);\n      });\n    }\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.isSubmitting) {\n        return;\n      }\n      _this.isSubmitting = true;\n      // Vérifiez si la selfie a été prise\n      if (!_this.user.selfie) {\n        alert(\"Veuillez prendre une selfie avant de soumettre.\");\n        _this.isSubmitting = false;\n        return;\n      }\n      // Vérifiez si tous les champs sont remplis\n      if (!_this.validateForm()) {\n        alert(\"Veuillez remplir tous les champs du formulaire.\");\n        _this.isSubmitting = false;\n        return;\n      }\n      const birthdate = new Date(_this.user.dob);\n      const today = new Date();\n      // Vérifiez la date de naissance\n      if (birthdate.getFullYear() > today.getFullYear()) {\n        alert(\"Choix incorrect : l'année choisie ne peut pas être supérieure à l'année actuelle.\");\n        _this.isSubmitting = false;\n        return;\n      }\n      const age = today.getFullYear() - birthdate.getFullYear();\n      const monthDiff = today.getMonth() - birthdate.getMonth();\n      if (age < 18 || age === 18 && monthDiff < 0) {\n        alert(\"Vous devez avoir au moins 18 ans.\");\n        _this.isSubmitting = false;\n        return;\n      }\n      const translitData = {\n        firstName: _this.user.firstName,\n        lastName: _this.user.lastName,\n        dob: _this.user.dob\n      };\n      try {\n        const translitResponse = yield _this.http.post('http://localhost:5000/transliterate', translitData, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).toPromise();\n        // Appel à l'API de comparaison\n        const comparisonResponse = yield _this.http.post('http://localhost:5003/comparaison', {\n          transliterated_data: {\n            'الاسم': translitResponse['الاسم'],\n            'اللقب': translitResponse['اللقب'],\n            'تاريخ الولادة': _this.formatDate(_this.user.dob) // Formatter la date de naissance\n          },\n\n          ocr_result: _this.user.extractedDataFront // ou le résultat OCR approprié\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).toPromise();\n        // Vérifiez le statut de la comparaison\n        if (comparisonResponse && comparisonResponse.statut === \"ok\") {\n          const userData = {\n            firstName: _this.user.firstName,\n            lastName: _this.user.lastName,\n            country: _this.user.country,\n            city: _this.user.city,\n            dob: _this.formatDate(_this.user.dob),\n            dobArabic: _this.user.dobArabic,\n            gender: _this.user.gender,\n            idCardFront: _this.user.idCardFront,\n            idCardBack: _this.user.idCardBack,\n            extractedDataFront: _this.user.extractedDataFront,\n            extractedDataBack: _this.user.extractedDataBack,\n            selfie: _this.user.selfie,\n            comparisonStatus: comparisonResponse.statut\n          };\n          _this.http.post('http://localhost:5000/api/users', userData).subscribe(response => {\n            console.log('Utilisateur ajouté:', response);\n            // Réinitialiser le formulaire\n            _this.resetForm();\n          }, error => {\n            console.error('Erreur lors de l\\'ajout:', error);\n            alert('Erreur lors de l\\'enregistrement: ' + error.error.message);\n          }).add(() => {\n            _this.isSubmitting = false;\n          });\n        } else {\n          alert(\"La comparaison a échoué : \" + (comparisonResponse.message || \"Erreur inconnue\"));\n          _this.isSubmitting = false;\n          _this.resetForm();\n        }\n      } catch (error) {\n        console.error(\"erreur\", error);\n        _this.isSubmitting = false;\n      }\n    })();\n  }\n  resetForm() {\n    this.user = {\n      firstName: '',\n      lastName: '',\n      country: '',\n      city: '',\n      dob: '',\n      dobArabic: '',\n      gender: '',\n      idCardFront: '',\n      idCardBack: '',\n      extractedDataFront: {},\n      extractedDataBack: {},\n      selfie: null\n    };\n    const fileInputs = document.querySelectorAll('input[type=\"file\"]');\n    fileInputs.forEach(input => input.value = '');\n    const selfiePreview = document.getElementById('selfiePreview');\n    if (selfiePreview) {\n      selfiePreview.src = '';\n    }\n    this.startCamera();\n  }\n  /*\n  checkFocusOut(event: FocusEvent) {\n    const firstname = (event.target as HTMLInputElement).value.trim();\n    if (firstname !== '') {\n      this.http.post('http://localhost:5000/transliterate', { text: firstname })\n        .subscribe({\n          next: (data: any) => console.log('Texte en arabe :', data.arabic),\n          error: err => console.error('Erreur lors de la translittération:', err)\n        });\n    }\n  }*/\n  formatDate(date) {\n    const d = new Date(date);\n    const day = String(d.getDate()).padStart(2, '0');\n    const month = String(d.getMonth() + 1).padStart(2, '0');\n    const year = d.getFullYear();\n    return `${day}/${month}/${year}`;\n  }\n};\n__decorate([ViewChild('lastNameInput')], HomeComponent.prototype, \"lastNameInput\", void 0);\n__decorate([ViewChild('videoElement')], HomeComponent.prototype, \"videoElement\", void 0);\n__decorate([ViewChild('canvasElement')], HomeComponent.prototype, \"canvasElement\", void 0);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})], HomeComponent);","map":{"version":3,"names":["Component","ViewChild","UserFields","HomeComponent","constructor","http","alertService","lastNameInput","videoElement","canvasElement","user","firstName","lastName","country","city","dob","dobArabic","gender","idCardFront","idCardBack","extractedDataFront","extractedDataBack","selfie","ageError","dateError","countries","citiesByCountry","cities","selectedVersoImage","selectedVersoImageHash","isSubmitting","previousFirstname","previousLastname","ngOnInit","video","document","getElementById","navigator","mediaDevices","getUserMedia","then","stream","srcObject","catch","error","console","onFileChangeRecto","event","field","input","target","files","length","file","formData","FormData","append","post","subscribe","response","log","alert","message","getBase64Image","base64","donnees","ocrData","processVersoImage","image","status","onFileChangeVerso","name","lastModified","reader","FileReader","readAsDataURL","Promise","resolve","onload","result","validateForm","takeSelfie","preventDefault","canvas","querySelector","selfiePreview","context","getContext","width","videoWidth","height","videoHeight","drawImage","toDataURL","src","style","display","tracks","getTracks","forEach","track","stop","restartCamera","nativeElement","setTimeout","startCamera","onCountryChange","selectedCountry","convertDateToArabic","dateStr","reject","parts","split","day","month","year","monthNames","monthIndex","parseInt","arabicDate","onDateChange","birthdate","Date","today","getFullYear","age","monthDiff","getMonth","formattedDate","formatDate","sendTransliteratedDate","apiUrl","data","headers","stopCamera","checkFocusOutFirstName","firstname","value","trim","sendTransliteratedName","checkFocusOutLastName","lastname","transliteratedName","sendData","sendResponse","sendError","transliterateFirstName","transliterateLastName","onSubmit","_this","_asyncToGenerator","translitData","translitResponse","toPromise","comparisonResponse","transliterated_data","ocr_result","statut","userData","comparisonStatus","resetForm","add","fileInputs","querySelectorAll","date","d","String","getDate","padStart","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\3emeISAMM\\PFE\\Code\\user-form\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { AlertService } from '../services/alert.service'; // Chemin selon votre projet\n\nenum UserFields {\n  FirstName = 'firstName',\n  LastName = 'lastName',\n  Country = 'country',\n  City = 'city',\n  Dob = 'dob',\n  Gender = 'gender',\n  IdCardFront = 'idCardFront',\n  IdCardBack = 'idCardBack',\n  Selfie = 'selfie'\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  UserFields = UserFields; // Exposer l'énumération\n  @ViewChild('lastNameInput') lastNameInput: ElementRef | null = null; // Référence pour le champ lastName\n  @ViewChild('videoElement') videoElement: ElementRef | null = null;\n  @ViewChild('canvasElement') canvasElement: ElementRef | null = null;\n\n  user = {\n    firstName: '',\n    lastName: '',\n    country: '',\n    city: '',\n    dob: '',\n    dobArabic:'',\n    gender: '',\n    idCardFront: '' as string | null, // Image en base64\n    idCardBack: '' as string | null, // Image en base64\n    extractedDataFront: {}, // Résultats extractés (Recto)\n    extractedDataBack: {}, // Résultats extractés (Verso)\n    selfie: '' as string | null\n};\n\n  ageError: string = '';\n  dateError: string = '';\n\n  countries: string[] = [\"Tunisie\"];\n\n  citiesByCountry: { [key: string]: string[] } = {\n      \"Tunisie\": [\"Nabeul\", \"Qurbus\", \"Kélibia\", \"Yasmine Hammamet\", \"Kerkouane\", \"Al Huwariyah\", \n        \"Kairouan\", \"Douz\", \"Nefta\", \"Ksar Ghilane\", \"Gafsa\", \"Degueche\", \"Shabikah\", \"Tozeur\", \n        \"Bizerte\", \"Takrouna\", \"Djebba\", \"Midoun\", \"Djerba Ajim\", \"Ghizen\", \"Arkou\", \"Houmt Souk\", \n        \"Aghir\", \"Hara Sghira Er Riadh\", \"Mellita\", \"Souk Houmet\", \"Mezraia\", \"Djerba Midun\", \n        \"Ksar Hadada\", \"Tataouine Nord\", \"Tataouine Ville\", \"Ghomrassen\", \"Testour\", \"Kesra\", \n        \"Beja, Tunisie\", \"Le Kef\", \"Makthar\", \"Sabria\", \"Toujane\", \"Zaghouan\", \"Zriba\", \"Matmata\", \n        \"Gabès Médina\", \"Tamezret\", \"La Marsa\", \"La Goulette\", \"Tunis\", \"Carthage\", \"Sidi Bou Saïd\", \n        \"Sbeïtla\", \"Monastir\", \"Sahline\", \"Ariana, Tunisie\", \"CHENINI\", \"Douiret\", \"Bani Khedeche\", \n        \"Ksar Ouled Brahim\", \"Sangho\", \"Médine\", \"Mahboubine\", \"Khalfallah\", \"Ksar Hallouf\", \"Zarzis\", \n        \"Guellala\", \"Hammam Sousse\", \"Hammamet\", \"Sousse\", \"M'saken\", \"El Jem\", \"Hiboun\", \"Mahdia\"],\n};\n\n  cities: string[] = [];\n\n  constructor(private http: HttpClient, private alertService: AlertService) {}\n\n  ngOnInit() {\n    const video = document.getElementById('videoElement') as HTMLVideoElement;\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then(stream => {\n        video.srcObject = stream;\n      })\n      .catch(error => {\n        console.error(\"Erreur lors de l'accès à la caméra : \", error);\n      });\n  }\n\n\n  onFileChangeRecto(event: Event, field: UserFields) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n  \n      // Appeler le serveur pour traiter l'image\n      const formData = new FormData();\n      formData.append('image', file);\n  \n      this.http.post('http://localhost:5001/ocr/recto', formData)\n      .subscribe((response: any) => {\n         console.log('Résultat OCR Recto:', response);\n     \n         if (response.error) {\n           // Informer l'utilisateur de la non-conformité de l'image\n           alert('Erreur : ' + response.message);\n           // Ne pas poursuivre le traitement si l’image n’est pas conforme\n           return;\n         }\n     \n         this.getBase64Image(file).then(base64 => {\n           this.user.idCardFront = base64;\n         });\n         this.user.extractedDataFront = response.donnees; // Stocker les résultats extractés\n     \n         // Envoyer les données à comparaison_N_P.py\n         const ocrData = {\n           'ocr_result': this.user.extractedDataFront\n         };\n     \n         this.http.post('http://localhost:5003/ocr-extraction', ocrData)\n          .subscribe((response: any) => {\n             console.log(`Résultats d'extraction OCR envoyés au serveur Python :`, response);\n           }, error => {\n             console.error('Erreur lors de l\\'envoi des données à comparaison_N_P.py (OCR Recto):', error);\n           });\n     \n         if (this.selectedVersoImage) {\n           this.processVersoImage(this.selectedVersoImage);\n         }\n       }, error => {\n         console.error('Erreur lors du traitement OCR Recto (réseau ou serveur) :', error);\n       });\n     \n    }\n  }\n\n  \nprocessVersoImage(image: File) {\n  // Nettoyer les données précédentes du Verso\n  this.user.idCardBack = null;\n  this.user.extractedDataBack = {};\n\n  const formData = new FormData();\n  formData.append('image', image);\n\n  this.http.post('http://localhost:5002/ocr/verso', formData)\n  .subscribe((response: any) => {\n     console.log('Résultat OCR Verso:', response);\n     this.getBase64Image(image).then(base64 => {\n       this.user.idCardBack = base64;\n     });\n     this.user.extractedDataBack = response.donnees; // Stocker les résultats extractés\n   }, error => {\n     console.error('Erreur lors du traitement OCR Verso:', error);\n \n     // Gérer les erreurs et afficher une alerte utilisateur-friendly\n     if (error.status === 400) { // Bad Request\n       this.alertService.error('Erreur de traitement OCR', 'Veuillez vérifier que l\\'image du verso est correcte.');\n     } else if (error.status === 500) { // Internal Server Error\n       this.alertService.error('Erreur serveur', 'Erreur interne du serveur. Veuillez réessayer plus tard.');\n     } else {\n       this.alertService.error('Erreur inconnue', 'Une erreur inconnue est survenue. Veuillez contacter le support.');\n     }\n   });\n \n}\n\nselectedVersoImage: File | null = null;\nselectedVersoImageHash: string | null = null;\n\nonFileChangeVerso(event: Event, field: UserFields) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n        this.selectedVersoImage = input.files[0]; // Stocker l'image Verso\n        this.selectedVersoImageHash = this.selectedVersoImage.name + this.selectedVersoImage.lastModified;\n        const file = input.files[0];\n\n        // Appeler le serveur pour traiter l'image\n        const formData = new FormData();\n        formData.append('image', file);\n\n        this.http.post('http://localhost:5002/ocr/verso', formData)\n            .subscribe((response: any) => {\n                console.log('Résultat OCR Verso:', response);\n                this.getBase64Image(file).then(base64 => {\n                  this.user.idCardBack = base64;\n                });\n                this.user.extractedDataBack = response.donnees; // Stocker les résultats extractés\n            }, error => {\n                console.error('Erreur lors du traitement OCR Verso:', error);\n            });\n    }\n}\n\n// Nouvelle méthode pour convertir l'image en base64\ngetBase64Image(file: File): Promise<string | null> {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  return new Promise(resolve => {\n    reader.onload = () => resolve(reader.result as string);\n  });\n}\n\n\n  validateForm(): boolean {\n    return (\n      this.user.firstName !== '' &&\n      this.user.lastName !== '' &&\n      this.user.country !== '' &&\n      this.user.city !== '' &&\n      this.user.dob !== '' &&\n      this.user.gender !== '' &&\n      this.user.idCardFront !== null &&\n      this.user.idCardBack !== null &&\n      this.user.selfie !== null\n    );\n  }\n  \n\ntakeSelfie(event: Event) {\n  // Prévenir la soumission du formulaire\n  event.preventDefault();\n\n  // Sélectionner l'élément vidéo et canvas\n  const video = document.getElementById('videoElement') as HTMLVideoElement;\n  const canvas = document.querySelector('canvas#canvasElement') as HTMLCanvasElement;\n  const selfiePreview = document.getElementById('selfiePreview') as HTMLImageElement;\n\n  // Vérifier que l'élément vidéo est bien présent\n  if (!video) {\n    console.error('Erreur : L\\'élément vidéo est introuvable.');\n    return;\n  }\n\n  // Créer un contexte pour le canvas\n  const context = canvas.getContext('2d');\n  if (!context) {\n    console.error('Erreur : Impossible d\\'obtenir le contexte du canvas.');\n    return;\n  }\n\n  // Dessiner l'image du flux vidéo dans le canvas\n  canvas.width = video.videoWidth;\n  canvas.height = video.videoHeight;\n  context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n  // Convertir le canvas en une image base64\n  this.user.selfie = canvas.toDataURL('image/jpeg'); // Convertir en chaîne base64\n\n  // Afficher l'aperçu de la selfie\n  if (selfiePreview) {\n    selfiePreview.src = this.user.selfie;\n    selfiePreview.style.display = 'block'; // Afficher l'aperçu\n  } else {\n    console.error('Erreur : L\\'élément d\\'aperçu selfie est introuvable.');\n  }\n\n  // Arrêter le flux vidéo après la capture de la selfie\n  const stream = video.srcObject as MediaStream;\n  const tracks = stream?.getTracks();\n  if (tracks) {\n    tracks.forEach(track => track.stop()); // Arrêter tous les tracks (caméra)\n  }\n\n  // Masquer la vidéo\n  video.style.display = 'none';\n}\n  \n\nrestartCamera() {\n  if (this.videoElement?.nativeElement) {\n    const stream = this.videoElement.nativeElement.srcObject as MediaStream;\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n    }\n  }\n\n  setTimeout(() => {\n    this.startCamera();\n  }, 500);\n}\n\n\n  \n\n  onCountryChange() {\n    const selectedCountry = this.user.country;\n    this.cities = this.citiesByCountry[selectedCountry] || [];\n    this.user.city = '';\n  }\n  \n\n\n\n  convertDateToArabic(dateStr: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      if (!dateStr) {\n        resolve('');\n        return;\n      }\n  \n      const parts = dateStr.split('/');\n      if (parts.length !== 3) {\n        resolve(dateStr); // Retourne la date originale si le format est incorrect\n        return;\n      }\n  \n      const day = parts[0];\n      const month = parts[1];\n      const year = parts[2];\n  \n      const monthNames = ['جانفي', 'فيفري','مارس','أفريل','ماي','جوان','جويلية','أوت','سبتمبر','أكتوبر','نوفمبر','ديسمبر'];\n      \n  \n      const monthIndex = parseInt(month, 10) - 1;\n      if (monthIndex < 0 || monthIndex >= 12) {\n        resolve(dateStr); // Retourne la date originale si le mois est invalide\n        return;\n      }\n  \n      const arabicDate = `${day} ${monthNames[monthIndex]} ${year}`;\n      resolve(arabicDate);\n    });\n  }\n  \n\n\n  onDateChange() {\n    const birthdate = new Date(this.user.dob);\n    const today = new Date();\n    \n    if (birthdate.getFullYear() > today.getFullYear()) {\n      this.dateError = \"Choix incorrect : l'année choisie ne peut pas être supérieure à l'année actuelle.\";\n      this.ageError = \"\";\n      return;\n    } else {\n      this.dateError = \"\";\n    }\n  \n    const age = today.getFullYear() - birthdate.getFullYear();\n    const monthDiff = today.getMonth() - birthdate.getMonth();\n  \n    if (age < 18 || (age === 18 && monthDiff < 0)) {\n      this.ageError = \"Vous devez avoir au moins 18 ans.\";\n    } else {\n      this.ageError = \"\";\n    }\n  \n    // Convertir la date en format arabe et l'envoyer au serveur\n    const formattedDate = this.formatDate(this.user.dob);\n    this.convertDateToArabic(formattedDate).then(arabicDate => {\n      this.user.dobArabic = arabicDate;\n      console.log('Date transformée en arabe:', this.user.dobArabic);\n      \n      // Envoyer la date au serveur\n      this.sendTransliteratedDate(arabicDate);\n    }).catch(error => {\n      console.error('Erreur lors de la conversion de la date:', error);\n    });\n  }\n\n  sendTransliteratedDate(arabicDate: string) {\n    const apiUrl = 'http://localhost:5003/transliterate-names';\n    const data = {\n      'تاريخ الولادة': arabicDate  // Utilisez la clé que votre serveur attend\n    };\n  \n    this.http.post(apiUrl, data, { headers: { 'Content-Type': 'application/json' } })\n      .subscribe(response => {\n        console.log('Date en arabe envoyée avec succès:', response);\n      }, error => {\n        console.error('Erreur lors de l\\'envoi de la date:', error);\n      });\n  }\n\n\n\n  \n\n  isSubmitting = false;\n\n  startCamera() {\n    const video = document.getElementById('videoElement') as HTMLVideoElement;\n  \n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({ video: true })\n        .then(stream => {\n          video.srcObject = stream;\n          video.style.display = \"block\"; // Rendre la vidéo visible\n        })\n        .catch(error => {\n          console.error(\"Erreur d'accès à la caméra :\", error);\n        });\n    }\n  }\n  \n  stopCamera() {\n    const video = document.getElementById('videoElement') as HTMLVideoElement;\n    const stream = video.srcObject as MediaStream;\n  \n    if (stream) {\n      const tracks = stream.getTracks();\n      tracks.forEach(track => track.stop()); // Arrêter la caméra\n      video.srcObject = null;\n      video.style.display = \"none\"; // Cacher la vidéo\n    }\n  }\n\n  checkFocusOutFirstName(event: FocusEvent) {\n    const firstname = (event.target as HTMLInputElement).value.trim();\n    if (firstname!== '' && firstname!== this.previousFirstname) {\n      this.sendTransliteratedName('firstName', firstname);\n      this.previousFirstname = firstname;\n    }\n  }\n  \n  checkFocusOutLastName(event: FocusEvent) {\n    const lastname = (event.target as HTMLInputElement).value.trim();\n    if (lastname!== '' && lastname!== this.previousLastname) {\n      this.sendTransliteratedName('lastName', lastname);\n      this.previousLastname = lastname;\n    }\n  }\n  \n  previousFirstname: string = '';\n  previousLastname: string = '';\n  \n  sendTransliteratedName(field: string, value: string) {\n    const apiUrl = 'http://localhost:5000/transliterate';\n    const data = {\n      [field === 'firstName'? 'firstName' : 'lastName']: value\n    };\n  \n    this.http.post(apiUrl, data, { headers: { 'Content-Type': 'application/json' } })\n     .subscribe(response => {\n        const transliteratedName = field === 'firstName'? (response as any)['الاسم'] : (response as any)['اللقب'];\n        console.log(`${field} translittéré : ${transliteratedName}`);\n  \n        // Envoyer le résultat au serveur Python\n        const sendData = {\n          [field === 'firstName'? 'الاسم' : 'اللقب']: transliteratedName\n        };\n\n        \n        this.http.post('http://localhost:5003/transliterate-names', sendData, { headers: { 'Content-Type': 'application/json' } })\n         .subscribe(sendResponse => {\n            console.log(`${field} envoyé au serveur Python avec succès`);\n          }, sendError => {\n            console.error(`Erreur lors de l'envoi de ${field} au serveur Python :`, sendError);\n          });\n\n\n      }, error => {\n        console.error(`Erreur lors de la translittération de ${field} :`, error);\n      });\n  }\n  \n\n  transliterateFirstName(): void {\n    if (this.user.firstName.trim()!== '') {\n      const apiUrl = 'http://localhost:5000/transliterate';\n      const data = {\n        firstName: this.user.firstName\n      };\n  \n      this.http.post(apiUrl, data, { headers: { 'Content-Type': 'application/json' } })\n        .subscribe(response => {\n          console.log(`Prénom translittéré : ${(response as any)['الاسم']}`);\n          // Traitement supplémentaire si nécessaire\n        }, error => {\n          console.error('Erreur lors de la translittération du prénom :', error);\n        });\n    }\n  }\n  \n  transliterateLastName(): void {\n    if (this.user.lastName.trim()!== '') {\n      const apiUrl = 'http://localhost:5000/transliterate';\n      const data = {\n        lastName: this.user.lastName\n      };\n  \n      this.http.post(apiUrl, data, { headers: { 'Content-Type': 'application/json' } })\n        .subscribe(response => {\nconsole.log(`Nom translittéré : ${(response as any)['اللقب']}`);\n          // Traitement supplémentaire si nécessaire\n        }, error => {\n          console.error('Erreur lors de la translittération du nom :', error);\n        });\n    }\n  }\n  \n  \n\n  async onSubmit() {\n    if (this.isSubmitting) {\n        return;\n    }\n\n    this.isSubmitting = true;\n\n    // Vérifiez si la selfie a été prise\n    if (!this.user.selfie) {\n        alert(\"Veuillez prendre une selfie avant de soumettre.\");\n        this.isSubmitting = false;\n        return;\n    }\n\n    // Vérifiez si tous les champs sont remplis\n    if (!this.validateForm()) {\n        alert(\"Veuillez remplir tous les champs du formulaire.\");\n        this.isSubmitting = false;\n        return;\n    }\n\n    const birthdate = new Date(this.user.dob);\n    const today = new Date();\n\n    // Vérifiez la date de naissance\n    if (birthdate.getFullYear() > today.getFullYear()) {\n        alert(\"Choix incorrect : l'année choisie ne peut pas être supérieure à l'année actuelle.\");\n        this.isSubmitting = false;\n        return;\n    }\n\n    const age = today.getFullYear() - birthdate.getFullYear();\n    const monthDiff = today.getMonth() - birthdate.getMonth();\n\n    if (age < 18 || (age === 18 && monthDiff < 0)) {\n        alert(\"Vous devez avoir au moins 18 ans.\");\n        this.isSubmitting = false;\n        return;\n    }\n\n    const translitData = {\n        firstName: this.user.firstName,\n        lastName: this.user.lastName,\n        dob: this.user.dob,\n    };\n\n    try {\n        const translitResponse = await this.http.post<any>(\n            'http://localhost:5000/transliterate',\n            translitData,\n            { headers: { 'Content-Type': 'application/json' } }\n        ).toPromise();\n\n        // Appel à l'API de comparaison\n        const comparisonResponse = await this.http.post<any>(\n            'http://localhost:5003/comparaison',\n            {\n                transliterated_data: {\n                    'الاسم': translitResponse['الاسم'],\n                    'اللقب': translitResponse['اللقب'],\n                    'تاريخ الولادة': this.formatDate(this.user.dob) // Formatter la date de naissance\n\n                },\n                ocr_result: this.user.extractedDataFront // ou le résultat OCR approprié\n            },\n            { headers: { 'Content-Type': 'application/json' } }\n        ).toPromise();\n\n        // Vérifiez le statut de la comparaison\n        if (comparisonResponse && comparisonResponse.statut === \"ok\") {\n          const userData = {\n            firstName: this.user.firstName,\n            lastName: this.user.lastName,\n            country: this.user.country,\n            city: this.user.city,\n            dob: this.formatDate(this.user.dob), // Format original\n            dobArabic: this.user.dobArabic, // Format arabe\n            gender: this.user.gender,\n            idCardFront: this.user.idCardFront,\n            idCardBack: this.user.idCardBack,\n            extractedDataFront: this.user.extractedDataFront,\n            extractedDataBack: this.user.extractedDataBack,\n            selfie: this.user.selfie,\n            comparisonStatus: comparisonResponse.statut\n          };\n        \n\n            this.http.post('http://localhost:5000/api/users', userData)\n                .subscribe(\n                    (response) => {\n                        console.log('Utilisateur ajouté:', response);\n                        // Réinitialiser le formulaire\n                        this.resetForm();\n                    },\n                    (error) => {\n                        console.error('Erreur lors de l\\'ajout:', error);\n                        alert('Erreur lors de l\\'enregistrement: ' + error.error.message);\n                    }\n                ).add(() => {\n                    this.isSubmitting = false;\n                });\n        } else {\n          alert(\"La comparaison a échoué : \" + (comparisonResponse.message || \"Erreur inconnue\"));\n          this.isSubmitting = false;\n          this.resetForm();\n      }\n  } catch (error) {\n      console.error(\"erreur\", error);\n      this.isSubmitting = false;\n  }\n}\n\nresetForm() {\n    this.user = {\n        firstName: '',\n        lastName: '',\n        country: '',\n        city: '',\n        dob: '',\n        dobArabic: '', // Ajoutez cette ligne\n        gender: '',\n        idCardFront: '',\n        idCardBack: '',\n        extractedDataFront: {},\n        extractedDataBack: {},\n        selfie: null\n    };\n\n    const fileInputs = document.querySelectorAll('input[type=\"file\"]') as NodeListOf<HTMLInputElement>;\n    fileInputs.forEach(input => input.value = '');\n\n    const selfiePreview = document.getElementById('selfiePreview') as HTMLImageElement;\n    if (selfiePreview) {\n        selfiePreview.src = '';\n    }\n\n    this.startCamera();\n}\n \n  /*\n  checkFocusOut(event: FocusEvent) {\n    const firstname = (event.target as HTMLInputElement).value.trim();\n    if (firstname !== '') {\n      this.http.post('http://localhost:5000/transliterate', { text: firstname })\n        .subscribe({\n          next: (data: any) => console.log('Texte en arabe :', data.arabic),\n          error: err => console.error('Erreur lors de la translittération:', err)\n        });\n    }\n  }*/\n  \n  \n  formatDate(date: string): string {\n    const d = new Date(date);\n    const day = String(d.getDate()).padStart(2, '0');\n    const month = String(d.getMonth() + 1).padStart(2, '0');\n    const year = d.getFullYear();\n    return `${day}/${month}/${year}`;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}